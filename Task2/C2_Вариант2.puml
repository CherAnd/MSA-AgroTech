@startuml вариант 2, Комплекс управления животноводством

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' === Участники ===
Person(оператор, "Оператор", "Использует систему")
Person(животновод, "Животновод", "Использует систему")

' === Границы системы===
System_Boundary(платформа, "АгроПром Х - Цифровая платформа") {


    Container(kafka, "Брокер сообщений", "Apache Kafka", "Шина данных")
    System_Boundary(АСУП, "Комплекс управления животноводством") {
        Container(управление_фермами, "Сервис управления животноводством", Python, "Управление и агрегация данных с ферм")
        Container(веб_интерфейс, "Веб-интерфейс", "React", "Управление фермами")
        ContainerDb(storage, "База данных","PostgreSQL", "")

        System_Boundary(АСУТП, "Система управления фермой") {
            Container(датчики_воды_еды, "Датчики уровня и качества воды. Датчики кормов.", "", "Данные с датчиков")
            Container(поилки_кормилки, "Поилки и кормилки", "", "Исполнительные механизмы")
            Container(модуль_контроля, "Контроллер Овен", "CodeSys", "Связь с полевым оборудованием")

            Container(камеры_на_фермах, "Камеры наблюдения на фермах", "", "Видеоизображение")
            Container(модуль_видеоаналитики, "Сервис анализа поведения животных", "C++", "Обработка видео")
            Container(хранилище_видео, "Хранилище размеченных видео и фотоданных")
            Container(хранилище_сырого_видео, "Хранилище сырых видеоданных")

            Container(scada_web, "SCADA система. WebServer", "SmartICS", "Управление и диспетчеризация")
            Container(scada_historian, "SCADA система. Historian", "SmartICS", "Управление и диспетчеризация")
            Container(scada_websocket_client, "SCADA система. Kafka", "SmartICS", "Конвертер Websockets->Kafka")
            Container(scada_core, "SCADA система. Core", "SmartICS", "Управление и диспетчеризация")
            Container(веб_интерфейс_ферма, "Веб-интерфейс фермы", "Vue", "Управление фермой")

            ContainerDb(farm_users_storage, "База пользователей и настроек","PostgreSQL", "")
            ContainerDb(farm_storage, "База исторических данных","PostgreSQL", "")

        }
    }

}

' === Взаимосвязи ===
Rel(датчики_воды_еды, модуль_контроля, "Передает данные", "Modbus")
Rel(модуль_контроля, scada_core, "Передает данные")
Rel(scada_web, scada_core, "Получает команды, отображает данные")
Rel(поилки_кормилки, модуль_контроля, "Получает команды на исполнение", "Modbus")
Rel(оператор, веб_интерфейс_ферма, "Использует")
Rel(веб_интерфейс_ферма, scada_web, "Использует", "HTTP, Websockets")
Rel(животновод, веб_интерфейс, "Использует")
Rel(веб_интерфейс, управление_фермами, "Использует", "REST API")
Rel(scada_core, scada_historian, "")
Rel(scada_historian, farm_storage, "")
Rel(scada_core, farm_users_storage, "")
Rel(scada_core, scada_websocket_client, "")
Rel(управление_фермами, storage, "")
Rel(камеры_на_фермах, модуль_видеоаналитики, "Потоковое видео")
Rel(камеры_на_фермах, хранилище_сырого_видео, "Потоковое видео")
Rel(хранилище_сырого_видео, модуль_видеоаналитики, "Требуемый фрагмент видео")
Rel(модуль_видеоаналитики, scada_core, "Сигналы")
Rel(модуль_видеоаналитики, хранилище_видео, "Обработанные данные")

' Центральная Kafka
Rel(scada_websocket_client, kafka, "Публикует данные, получает уставки", "Websockets->Kafka")
Rel(kafka, управление_фермами, "Публикует данные", "Kafka Protocol")
Rel(управление_фермами, kafka, "Публикует данные", "Kafka Protocol")


@enduml